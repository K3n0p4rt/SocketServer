<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180716 16:23:56.430" generator="Robot 3.0.4 (Python 2.7.10 on darwin)">
<suite source="/Users/kenrickyap/Desktop/SocketServer/SimpleAppTest.robot" id="s1" name="SimpleAppTest">
<kw type="setup" name="Open Connection And Login">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${HOST}</arg>
<arg>port=${SER_PORT}</arg>
<arg>alias=Server</arg>
</arguments>
<status status="PASS" endtime="20180716 16:23:56.543" starttime="20180716 16:23:56.542"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20180716 16:23:56.543" level="INFO">Logging into 'localhost:4000' as 'root'.</msg>
<msg timestamp="20180716 16:23:57.732" level="INFO">Read output: Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.9.87-linuxkit-aufs x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Mon Jul 16 08:23:03 2018 from 172.17.0.1
root@b61effe776c4:~#</msg>
<status status="PASS" endtime="20180716 16:23:57.732" starttime="20180716 16:23:56.543"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>cd /git</arg>
</arguments>
<msg timestamp="20180716 16:23:57.743" level="INFO">cd /git</msg>
<status status="PASS" endtime="20180716 16:23:57.743" starttime="20180716 16:23:57.733"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>g++ -std=c++11 -pthread server.cpp -o run_server</arg>
</arguments>
<msg timestamp="20180716 16:23:57.765" level="INFO">root@b61effe776c4:/git# g++ -std=c++11 -pthread server.cpp -o run_server</msg>
<status status="PASS" endtime="20180716 16:23:57.765" starttime="20180716 16:23:57.743"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${HOST}</arg>
<arg>port=3000</arg>
<arg>alias=Client_1</arg>
</arguments>
<status status="PASS" endtime="20180716 16:23:57.766" starttime="20180716 16:23:57.766"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20180716 16:23:57.766" level="INFO">Logging into 'localhost:3000' as 'root'.</msg>
<msg timestamp="20180716 16:23:58.896" level="INFO">Read output: Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.9.87-linuxkit-aufs x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Mon Jul 16 08:23:04 2018 from 172.17.0.1
root@c6970c3f03f7:~#</msg>
<status status="PASS" endtime="20180716 16:23:58.896" starttime="20180716 16:23:57.766"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>cd /git</arg>
</arguments>
<msg timestamp="20180716 16:23:58.901" level="INFO">cd /git</msg>
<status status="PASS" endtime="20180716 16:23:58.901" starttime="20180716 16:23:58.897"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>g++ -std=c++11 -pthread client.cpp -o run_client</arg>
</arguments>
<msg timestamp="20180716 16:23:58.906" level="INFO">root@c6970c3f03f7:/git# g++ -std=c++11 -pthread client.cpp -o run_client</msg>
<status status="PASS" endtime="20180716 16:23:58.906" starttime="20180716 16:23:58.902"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${HOST}</arg>
<arg>port=6000</arg>
<arg>alias=Client_2</arg>
</arguments>
<status status="PASS" endtime="20180716 16:23:58.907" starttime="20180716 16:23:58.907"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20180716 16:23:58.908" level="INFO">Logging into 'localhost:6000' as 'root'.</msg>
<msg timestamp="20180716 16:24:00.022" level="INFO">Read output: Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.9.87-linuxkit-aufs x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Mon Jul 16 08:23:05 2018 from 172.17.0.1
root@a6f06fd8065a:~#</msg>
<status status="PASS" endtime="20180716 16:24:00.022" starttime="20180716 16:23:58.907"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>cd /git</arg>
</arguments>
<msg timestamp="20180716 16:24:00.033" level="INFO">cd /git</msg>
<status status="PASS" endtime="20180716 16:24:00.033" starttime="20180716 16:24:00.023"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${HOST}</arg>
<arg>port=5000</arg>
<arg>alias=Client_3</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:00.034" starttime="20180716 16:24:00.033"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20180716 16:24:00.034" level="INFO">Logging into 'localhost:5000' as 'root'.</msg>
<msg timestamp="20180716 16:24:01.160" level="INFO">Read output: Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.9.87-linuxkit-aufs x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Mon Jul 16 08:23:06 2018 from 172.17.0.1
root@08ea329edb2b:~#</msg>
<status status="PASS" endtime="20180716 16:24:01.161" starttime="20180716 16:24:00.034"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>cd /git</arg>
</arguments>
<msg timestamp="20180716 16:24:01.167" level="INFO">cd /git</msg>
<status status="PASS" endtime="20180716 16:24:01.168" starttime="20180716 16:24:01.161"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${HOST}</arg>
<arg>port=2000</arg>
<arg>alias=Client_4</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:01.170" starttime="20180716 16:24:01.168"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20180716 16:24:01.171" level="INFO">Logging into 'localhost:2000' as 'root'.</msg>
<msg timestamp="20180716 16:24:02.285" level="INFO">Read output: Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.9.87-linuxkit-aufs x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Mon Jul 16 08:23:07 2018 from 172.17.0.1
root@46e0928a7de2:~#</msg>
<status status="PASS" endtime="20180716 16:24:02.286" starttime="20180716 16:24:01.170"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>cd /git</arg>
</arguments>
<msg timestamp="20180716 16:24:02.290" level="INFO">cd /git</msg>
<status status="PASS" endtime="20180716 16:24:02.290" starttime="20180716 16:24:02.286"></status>
</kw>
<status status="PASS" endtime="20180716 16:24:02.290" starttime="20180716 16:23:56.542"></status>
</kw>
<test id="s1-t1" name="Start Server">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Server</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.292" starttime="20180716 16:24:02.291"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>./run_server ${VIR_PORT}</arg>
</arguments>
<msg timestamp="20180716 16:24:02.294" level="INFO">server.cpp: In function 'int main(int, char**)':</msg>
<status status="PASS" endtime="20180716 16:24:02.294" starttime="20180716 16:24:02.292"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>...</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.304" level="INFO">server.cpp:108:31: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
   error("ERROR opening socket");
                               ^
server.cpp:120:26: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
   error("ERROR on accept");
                          ^
root@b61effe776c4:/git# ./run_server 6969
Starting server...</msg>
<msg timestamp="20180716 16:24:02.304" level="INFO">${output} = server.cpp:108:31: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
   error("ERROR opening socket");
                               ^
server.cpp:120:26: warning: de...</msg>
<status status="PASS" endtime="20180716 16:24:02.304" starttime="20180716 16:24:02.295"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>Starting server...</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.305" starttime="20180716 16:24:02.304"></status>
</kw>
<status status="PASS" endtime="20180716 16:24:02.305" critical="yes" starttime="20180716 16:24:02.290"></status>
</test>
<test id="s1-t2" name="Join With One Client">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_1</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.306" starttime="20180716 16:24:02.306"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>./run_client ${IP_ADD} ${VIR_PORT}</arg>
</arguments>
<msg timestamp="20180716 16:24:02.307" level="INFO">client.cpp: In function 'void writeLoop(int)':</msg>
<status status="PASS" endtime="20180716 16:24:02.308" starttime="20180716 16:24:02.306"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Server</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.308" starttime="20180716 16:24:02.308"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>joined</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.317" level="INFO">New client joined</msg>
<msg timestamp="20180716 16:24:02.317" level="INFO">${output} = 
New client joined</msg>
<status status="PASS" endtime="20180716 16:24:02.317" starttime="20180716 16:24:02.309"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>New client joined</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.318" starttime="20180716 16:24:02.317"></status>
</kw>
<status status="PASS" endtime="20180716 16:24:02.318" critical="yes" starttime="20180716 16:24:02.305"></status>
</test>
<test id="s1-t3" name="Client Join Till Server Capacity">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_2</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.319" starttime="20180716 16:24:02.319"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>./run_client ${IP_ADD} ${VIR_PORT}</arg>
</arguments>
<msg timestamp="20180716 16:24:02.322" level="INFO">root@a6f06fd8065a:/git# ./run_client 172.17.0.6 6969</msg>
<status status="PASS" endtime="20180716 16:24:02.322" starttime="20180716 16:24:02.319"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Server</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.323" starttime="20180716 16:24:02.323"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>joined</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.329" level="INFO">New client joined</msg>
<msg timestamp="20180716 16:24:02.329" level="INFO">${output} = 
New client joined</msg>
<status status="PASS" endtime="20180716 16:24:02.329" starttime="20180716 16:24:02.324"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>New client joined</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.330" starttime="20180716 16:24:02.329"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_3</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.330" starttime="20180716 16:24:02.330"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>./run_client ${IP_ADD} ${VIR_PORT}</arg>
</arguments>
<msg timestamp="20180716 16:24:02.335" level="INFO">root@08ea329edb2b:/git# ./run_client 172.17.0.6 6969</msg>
<status status="PASS" endtime="20180716 16:24:02.335" starttime="20180716 16:24:02.331"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Server</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.336" starttime="20180716 16:24:02.336"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>joined</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.340" level="INFO">New client joined</msg>
<msg timestamp="20180716 16:24:02.340" level="INFO">${output} = 
New client joined</msg>
<status status="PASS" endtime="20180716 16:24:02.341" starttime="20180716 16:24:02.336"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>New client joined</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.341" starttime="20180716 16:24:02.341"></status>
</kw>
<status status="PASS" endtime="20180716 16:24:02.342" critical="yes" starttime="20180716 16:24:02.318"></status>
</test>
<test id="s1-t4" name="Client Join At Max Server Capacity">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_4</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.343" starttime="20180716 16:24:02.343"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>./run_client ${IP_ADD} ${VIR_PORT}</arg>
</arguments>
<msg timestamp="20180716 16:24:02.350" level="INFO">root@46e0928a7de2:/git# ./run_client 172.17.0.6 6969</msg>
<status status="PASS" endtime="20180716 16:24:02.350" starttime="20180716 16:24:02.343"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>later</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.356" level="INFO">Server full. Please try agian later</msg>
<msg timestamp="20180716 16:24:02.356" level="INFO">${output} = Server full. Please try agian later</msg>
<status status="PASS" endtime="20180716 16:24:02.356" starttime="20180716 16:24:02.350"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server full. Please try agian later</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.356" starttime="20180716 16:24:02.356"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>pkill -15 run</arg>
</arguments>
<msg timestamp="20180716 16:24:02.357" level="INFO">Executing command 'pkill -15 run'.</msg>
<msg timestamp="20180716 16:24:02.370" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180716 16:24:02.370" starttime="20180716 16:24:02.357"></status>
</kw>
<status status="PASS" endtime="20180716 16:24:02.371" critical="yes" starttime="20180716 16:24:02.342"></status>
</test>
<test id="s1-t5" name="Client Leave and Join">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_3</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.372" starttime="20180716 16:24:02.372"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>pkill -15 run</arg>
</arguments>
<msg timestamp="20180716 16:24:02.373" level="INFO">Executing command 'pkill -15 run'.</msg>
<msg timestamp="20180716 16:24:02.386" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180716 16:24:02.386" starttime="20180716 16:24:02.372"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>./run_client ${IP_ADD} ${VIR_PORT}</arg>
</arguments>
<msg timestamp="20180716 16:24:02.387" level="INFO">Terminated</msg>
<status status="PASS" endtime="20180716 16:24:02.387" starttime="20180716 16:24:02.386"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Server</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.388" starttime="20180716 16:24:02.388"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>joined</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.394" level="INFO">New client joined</msg>
<msg timestamp="20180716 16:24:02.395" level="INFO">${output} = 
New client joined</msg>
<status status="PASS" endtime="20180716 16:24:02.395" starttime="20180716 16:24:02.388"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>New client joined</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.395" starttime="20180716 16:24:02.395"></status>
</kw>
<status status="PASS" endtime="20180716 16:24:02.396" critical="yes" starttime="20180716 16:24:02.371"></status>
</test>
<test id="s1-t6" name="Send And Recieve Message (Client_3)">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_3</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.397" starttime="20180716 16:24:02.397"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>howdy!</arg>
</arguments>
<msg timestamp="20180716 16:24:02.398" level="INFO">root@08ea329edb2b:/git# ./run_client 172.17.0.6 6969</msg>
<status status="PASS" endtime="20180716 16:24:02.398" starttime="20180716 16:24:02.397"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Server</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.400" starttime="20180716 16:24:02.399"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>!</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.402" level="INFO">Here is the message: howdy!</msg>
<msg timestamp="20180716 16:24:02.402" level="INFO">${output} = 
Here is the message: howdy!</msg>
<status status="PASS" endtime="20180716 16:24:02.402" starttime="20180716 16:24:02.401"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>howdy!</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.402" starttime="20180716 16:24:02.402"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_2</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.403" starttime="20180716 16:24:02.403"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>!</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.403" level="INFO">howdy!</msg>
<msg timestamp="20180716 16:24:02.404" level="INFO">${output} = howdy!</msg>
<status status="PASS" endtime="20180716 16:24:02.404" starttime="20180716 16:24:02.403"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>howdy!</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.404" starttime="20180716 16:24:02.404"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_1</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.405" starttime="20180716 16:24:02.404"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>!</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.414" level="INFO">client.cpp:35:42: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
    error("ERROR writing to socket",sockfd);
                                          ^
client.cpp: In function 'void readLoop(int)':
client.cpp:52:44: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
    error("ERROR reading from socket",sockfd);
                                            ^
client.cpp: In function 'int main(int, char**)':
client.cpp:74:31: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
   error("ERROR opening socket");
                               ^
client.cpp:92:27: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
   error("ERROR connecting");
                           ^
root@c6970c3f03f7:/git# ./run_client 172.17.0.6 6969
howdy!</msg>
<msg timestamp="20180716 16:24:02.414" level="INFO">${output} = client.cpp:35:42: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]
    error("ERROR writing to socket",sockfd);
                                          ^
client.cp...</msg>
<status status="PASS" endtime="20180716 16:24:02.414" starttime="20180716 16:24:02.405"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>howdy!</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.415" starttime="20180716 16:24:02.414"></status>
</kw>
<status status="PASS" endtime="20180716 16:24:02.415" critical="yes" starttime="20180716 16:24:02.396"></status>
</test>
<test id="s1-t7" name="Send And Recieve Message (Client_1)">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_1</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.416" starttime="20180716 16:24:02.416"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>I am here</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.417" starttime="20180716 16:24:02.416"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_3</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.417" starttime="20180716 16:24:02.417"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>here</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.420" level="INFO">howdy!
I am here</msg>
<msg timestamp="20180716 16:24:02.420" level="INFO">${output} = howdy!
I am here</msg>
<status status="PASS" endtime="20180716 16:24:02.420" starttime="20180716 16:24:02.418"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>I am here</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.421" starttime="20180716 16:24:02.420"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_2</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.421" starttime="20180716 16:24:02.421"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>here</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.422" level="INFO">I am here</msg>
<msg timestamp="20180716 16:24:02.422" level="INFO">${output} = 

I am here</msg>
<status status="PASS" endtime="20180716 16:24:02.422" starttime="20180716 16:24:02.421"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>I am here</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.422" starttime="20180716 16:24:02.422"></status>
</kw>
<status status="PASS" endtime="20180716 16:24:02.423" critical="yes" starttime="20180716 16:24:02.415"></status>
</test>
<test id="s1-t8" name="Send And Recieve Message (Client_2)">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_2</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.424" starttime="20180716 16:24:02.423"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>cry ;(</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.424" starttime="20180716 16:24:02.424"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_1</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.425" starttime="20180716 16:24:02.425"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>;(</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.427" level="INFO">I am here
cry ;(</msg>
<msg timestamp="20180716 16:24:02.428" level="INFO">${output} = 
I am here
cry ;(</msg>
<status status="PASS" endtime="20180716 16:24:02.428" starttime="20180716 16:24:02.426"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>cry ;(</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.428" starttime="20180716 16:24:02.428"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_3</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.429" starttime="20180716 16:24:02.429"></status>
</kw>
<kw name="Read Until" library="SSHLibrary">
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<arguments>
<arg>;(</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 16:24:02.429" level="INFO">cry ;(</msg>
<msg timestamp="20180716 16:24:02.429" level="INFO">${output} = 

cry ;(</msg>
<status status="PASS" endtime="20180716 16:24:02.430" starttime="20180716 16:24:02.429"></status>
</kw>
<kw name="Should End With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<arguments>
<arg>${output}</arg>
<arg>cry ;(</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.430" starttime="20180716 16:24:02.430"></status>
</kw>
<status status="PASS" endtime="20180716 16:24:02.430" critical="yes" starttime="20180716 16:24:02.423"></status>
</test>
<kw type="teardown" name="Shutdown Application And Close All Connections">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_4</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.431" starttime="20180716 16:24:02.431"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>pkill -15 run</arg>
</arguments>
<msg timestamp="20180716 16:24:02.432" level="INFO">Executing command 'pkill -15 run'.</msg>
<msg timestamp="20180716 16:24:02.462" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180716 16:24:02.462" starttime="20180716 16:24:02.432"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_3</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.462" starttime="20180716 16:24:02.462"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>pkill -15 run</arg>
</arguments>
<msg timestamp="20180716 16:24:02.463" level="INFO">Executing command 'pkill -15 run'.</msg>
<msg timestamp="20180716 16:24:02.479" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180716 16:24:02.479" starttime="20180716 16:24:02.462"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_2</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.480" starttime="20180716 16:24:02.479"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>pkill -15 run</arg>
</arguments>
<msg timestamp="20180716 16:24:02.480" level="INFO">Executing command 'pkill -15 run'.</msg>
<msg timestamp="20180716 16:24:02.500" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180716 16:24:02.501" starttime="20180716 16:24:02.480"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Client_1</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.501" starttime="20180716 16:24:02.501"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>pkill -15 run</arg>
</arguments>
<msg timestamp="20180716 16:24:02.502" level="INFO">Executing command 'pkill -15 run'.</msg>
<msg timestamp="20180716 16:24:02.519" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180716 16:24:02.520" starttime="20180716 16:24:02.501"></status>
</kw>
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>Server</arg>
</arguments>
<status status="PASS" endtime="20180716 16:24:02.520" starttime="20180716 16:24:02.520"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>pkill -15 run</arg>
</arguments>
<msg timestamp="20180716 16:24:02.521" level="INFO">Executing command 'pkill -15 run'.</msg>
<msg timestamp="20180716 16:24:02.541" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180716 16:24:02.541" starttime="20180716 16:24:02.520"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180716 16:24:02.825" starttime="20180716 16:24:02.541"></status>
</kw>
<status status="PASS" endtime="20180716 16:24:02.825" starttime="20180716 16:24:02.431"></status>
</kw>
<doc>This example demonstrates executing commands on a remote machine
and getting their output and the return code.
http://robotframework.org/SSHLibrary/SSHLibrary.html#Read
Notice how connections are handled as part of the suite setup and
teardown. This saves some time when executing several test cases.</doc>
<status status="PASS" endtime="20180716 16:24:02.825" starttime="20180716 16:23:56.434"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="SimpleAppTest" pass="8">SimpleAppTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
